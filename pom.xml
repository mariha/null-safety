<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.anyname</groupId>
    <artifactId>null-safety</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <!-- Compiles the code with error-prone and null-away, static code analysis tools -->
            <id>error-prone</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>

                        <configuration>
                            <compilerId>javac-with-errorprone</compilerId>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>

                            <annotationProcessorPaths>
                                <path>
                                    <groupId>com.uber.nullaway</groupId>
                                    <artifactId>nullaway</artifactId>
                                    <version>0.6.6</version>
                                </path>
                            </annotationProcessorPaths>

                            <showWarnings>true</showWarnings>
                            <compilerArgs>
                                <!-- Enables NullAway analysis -->
                                <!-- Invocation to a method of a class outside specified packages are optimistically
                                 assumed that all parameters are @Nullable and the return value is @NonNull -->
                                <arg>-XepOpt:NullAway:AnnotatedPackages=org.anyname</arg>

                                <!-- Silence error-prone checks -->
                                <!--<arg>-XepAllErrorsAsWarnings</arg>-->
                                <!--<arg>-XepDisableAllChecks</arg>-->

                                <!-- Overwrite above to make null-away issues visible -->
                                <arg>-Xep:NullAway:ERROR</arg>
                                <!--<arg>-Xep:NullAway:WARN</arg>-->

                                <arg>-XepOpt:NullAway:ExternalInitAnnotations=javax.xml.bind.annotation.XmlRootElement
                                </arg>
                                <arg>-XepOpt:NullAway:ExcludedClasses=org.anyname.nullsafety.NullableTest</arg>

                                <!-- Ignore error-prone warnings in generated code -->
                                <arg>-XepDisableWarningsInGeneratedCode</arg>
                                <arg>-XepOpt:NullAway:TreatGeneratedAsUnannotated=true</arg>
                            </compilerArgs>
                        </configuration>

                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.plexus</groupId>
                                <artifactId>plexus-compiler-javac-errorprone</artifactId>
                                <version>2.8.3</version>
                            </dependency>

                            <!-- override plexus-compiler-javac-errorprone's dependency on Error Prone with the latest version -->
                            <dependency>
                                <groupId>com.google.errorprone</groupId>
                                <artifactId>error_prone_core</artifactId>
                                <version>2.3.2</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <dependency>
            <!-- Hibernate Validator is the reference implementation of the Java Bean Validation API. -->
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.0.19.Final</version>
        </dependency>
        <dependency>
            <!-- Unified Expression Language reference implementation for Hibernate Validator -->
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>3.0.1-b09</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.11.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>